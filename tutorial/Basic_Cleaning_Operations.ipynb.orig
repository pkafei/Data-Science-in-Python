{
 "metadata": {
  "name": "",
<<<<<<< HEAD
  "signature": "sha256:2386bcad0a9b53abd36c40045e528966f6a083130f7f0fb116fb7d86931912d4"
=======
<<<<<<< HEAD
<<<<<<< HEAD
  "signature": "sha256:9db0dcd84253967ee9e9dfd8e13fdf432e2852387b555224448186da3b53975c"
=======
  "signature": "sha256:05046fb08ad03122d9c546722a8a9cc5aeacc1ecab3aa6195ef028c36140c26a"
>>>>>>> 7bb60905b778f6cfe0cf0542a38efec49eb5e008
=======
  "signature": "sha256:31db1282087b4149c01eaf41b8eff6d2814683b949d5083eed53a31e5d62e76e"
>>>>>>> 16f3692e3fecf3891b2bf792d367c67e0505b625
>>>>>>> 7ac64b40542f2cd1d341ce60a4e8ad1c0a9b25fa
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "# Cleaning up Your Data Frame"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "List of cleaning operations\n",
      "\n",
      "* introduction to querying\n",
      "* get rid of NA (The last columns we can do without the NA)\n",
      "* Rename the columns \n",
<<<<<<< HEAD
      "* Add a column\n",
      "* Build a dataframe\n",
      "* Merge two dataframes into one\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
=======
      "* Add a column\n"
     ]
>>>>>>> 7bb60905b778f6cfe0cf0542a38efec49eb5e008
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "## Import Pandas and other relevant packages. \n",
      "\n",
      "import pandas as pd # the pandas package\n",
      "import numpy as np"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Load the data \n",
      "md_unemployment = pd.read_csv(\"Employment_Figures.csv\")\n",
      "md_unemployment.head()\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## In this lesson we are going to go over some basic data munging. \n",
      "The common adage is that data science is 20% analyzing and visualizing and 80% cleaning. It is not uncommon for data scientists to call themselves data janitors!"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Cleaning task 1: Working with \"Missing Data\" \n",
<<<<<<< HEAD
      "In this section we will go over the different ways to deal with missing data or null values(NAN- which means 'not a number', NAT is 'not a time'.) \n",
      "* drop na\n"
=======
      "For the last three columns the NaN doesn't add to our analysis so let's just get rid of them.\n"
>>>>>>> 16f3692e3fecf3891b2bf792d367c67e0505b625
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
<<<<<<< HEAD
      "#drop rows that have NAN values\n",
      "md_employment.dropna()"
=======
      "md_unemployment.dropna()\n"
>>>>>>> 16f3692e3fecf3891b2bf792d367c67e0505b625
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "### If you want to keep the columns you can replace 'NA' with blank spaces as placeholders. You might add data to these rows later\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
<<<<<<< HEAD
      "md_employment.fillna('', inplace=True)\n",
      "md_employment"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
<<<<<<< HEAD
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## We are going to compare Maryland's 2013 Unemployment Rate with the District of Columbia\n"
     ]
    },
    {
=======
>>>>>>> 7ac64b40542f2cd1d341ce60a4e8ad1c0a9b25fa
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Replace NAN with value\n",
      "md_employment.fillna('', inplace=True)\n",
      "md_employment"
=======
      "md_unemployment.fillna(0, inplace=True)"
>>>>>>> 16f3692e3fecf3891b2bf792d367c67e0505b625
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## We are only interested going to compare Maryland's 2013 Unemployment Rate with the District of Columbia"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## First let's take the relevant columns we need"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "year_2013_employment = md_unemployment[(md_unemployment.Year == 2013)]\n",
      "MD_2013_unemployment = year_2013_employment[['Year', 'Month', 'Maryland Unemployment Rate']]\n",
      "\n",
      "MD_2013_unemployment.head()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Here is the DC unemployment numbers for 2013. \n",
      "Jan: 8.6, Feb: 8.6, Mar 8.5, Apr 8.5, May 8.5, Jun 8.5, Jul 8.4, Aug 8.3, Sept 8.2, Oct 8.0, Nov 7.8, Dec 7.6"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Ok Let's put these numbers in a Data Frame"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# Building a dataframe\n",
      "DC_2013_unemployment = pd.DataFrame({'Month': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', \n",
      "                                             'Sept', 'Oct', 'Nov', 'Dec'], 'DC Unemployment Rate': [8.6, 8.6,\n",
      "                                            8.5, 8.5, 8.5, 8.5, 8.4, 8.3, 8.2, 8.0, 7.8, 7.6]})\n",
<<<<<<< HEAD
      "DC_unemployment"
=======
      "DC_2013_unemployment"
>>>>>>> 7ac64b40542f2cd1d341ce60a4e8ad1c0a9b25fa
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Rearrange order of the columns"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "DC_2013_employment = DC_unemployment[['Month', 'DC Unemployment Rate']]\n",
      "DC_2013_employment"
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "## Let's add Maryland's 2013 unemployment rate to our DC unemployment figure table"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
<<<<<<< HEAD
      "Maryland_and_DC = pd.merge.ix(MD_2013_employment,DC_2013_employment)\n",
      "Maryland_and_DC"
=======
      "unemployment = pd.merge(MD_2013_unemployment, DC_2013_employment, on = 'key' )"
>>>>>>> 16f3692e3fecf3891b2bf792d367c67e0505b625
     ],
     "language": "python",
     "metadata": {},
     "outputs": []
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}